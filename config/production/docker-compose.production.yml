version: '3.8'

services:
  # Frontend React application for production
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_DOCKER=true
      - REACT_APP_API_URL_AUTO=true
      - REACT_APP_API_URL_LOCALHOST=http://localhost:3003
      - REACT_APP_API_URL_HOME=http://192.168.1.143:3003
      - REACT_APP_API_URL_EXTERNAL=http://107.137.66.174:3003
      - REACT_APP_API_URL_DDNS=http://autotrade.mywire.org:3003
      - DANGEROUSLY_DISABLE_HOST_CHECK=false
      - GENERATE_SOURCEMAP=false
      - INLINE_RUNTIME_CHUNK=false
    volumes:
      - ./nginx.production.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - trading-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API server (integrated with backend production setup)
  backend:
    # This will be provided by the backend production setup
    external: true
    networks:
      - trading-network

  # PostgreSQL Database (integrated with backend production setup)
  database:
    # This will be provided by the backend production setup
    external: true
    networks:
      - trading-network

  # Redis for caching (integrated with backend production setup)
  redis:
    # This will be provided by the backend production setup
    external: true
    networks:
      - trading-network

  # Nginx reverse proxy for production
  nginx-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.production.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - trading-network
    restart: unless-stopped
    profiles:
      - ssl

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.production.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - trading-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3003:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - trading-network
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  trading-network:
    external: true
    name: backend_trading-network

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
